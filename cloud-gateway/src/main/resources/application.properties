spring.application.name=CLOUD-GATEWAY
server.port=9090
spring.config.import=optional:configserver:
#spring.cloud.config.uri=http://localhost:9196
#
##### Eureka Client Configuration
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true

# Reduce the Eureka cache refresh interval to remove stale instances quickly
eureka.client.registry-fetch-interval-seconds=5

# Order Service Configuration with Circuit Breaker
spring.cloud.gateway.routes[0].id=order-service
spring.cloud.gateway.routes[0].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/order/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=orderserviceCB
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/orderFallback

# Payment Service Configuration with Circuit Breaker
spring.cloud.gateway.routes[1].id=payment-service
spring.cloud.gateway.routes[1].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/payment/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=paymentserviceCB
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback/paymentFallback

# Enable Hystrix Stream endpoint for monitoring
management.endpoints.web.exposure.include=hystrix.stream
management.endpoint.hystrix.enabled=true
management.endpoint.health.show-details=always

# Set Hystrix thread timeout (5 seconds = 5000ms)
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
hystrix.command.default.execution.isolation.strategy=THREAD

# Reduce HTTP client response timeout to allow quicker fallback
spring.cloud.gateway.httpclient.responseTimeout=3000


